local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()

--Windows

local Window = Library.CreateLib("[ðŸš¢TITANIC] Clicker Party Simulator", "BloodTheme")


--Tabs

local Main = Window:NewTab("Main")

local Rebirths = Window:NewTab("Rebirths")

local Hatchs = Window:NewTab("Hatchs")

local Upgrades = Window:NewTab("Upgrades")

local Teleport = Window:NewTab("Teleport")

local Misc = Window:NewTab("Misc")


--Sections

local MainSection = Main:NewSection("Main")

local RebirthsSection = Rebirths:NewSection("Auto Rebirths")

local UpgradesSection = Upgrades:NewSection("Auto Upgrades")

local TeleportSection = Teleport:NewSection("Teleport")

local MiscSection = Misc:NewSection("Misc")


--Misc Buttons

MiscSection:NewButton("Infinite Yield", "Infinite Yield", function()
    loadstring(game:HttpGet"https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source")()
end)

MiscSection:NewButton("Dark Dex", "Dark Dex", function()
    getgenv().Key = "Bash"
loadstring(game:HttpGet("https://raw.githubusercontent.com/Hosvile/Refinement/main/MC%3AIY%20Dex",true))()
end)

MiscSection:NewButton("RemoteSpy", "RemoteSpy", function()
    loadstring(game:HttpGet("https://scriptblox.com/raw/Universal-Script-RemoteSpy-For-Mobile-6609"))()
end)


--Teleport Buttons

TeleportSection:NewButton("Spawn", "Teleport To Spawn", function()
       game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-47.5383034, 3.92352104, -210.652786, -0.583867311, 4.14946122e-08, -0.811849117, 9.0446397e-09, 1, 4.46064981e-08, 0.811849117, 1.87013924e-08, -0.583867311)
end)

TeleportSection:NewButton("Desert", "Teleport To Desert", function()
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1026.10791, 3.10753083, -67.8041687, 1, 9.21287295e-08, -3.3882873e-14, -9.21287295e-08, 1, -3.37963648e-08, 3.07692579e-14, 3.37963648e-08, 1)
end)

TeleportSection:NewButton("Ocean", "Teleport To Ocean", function()
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-1285.75793, 3.35753083, -3038.0105, 1, 2.74313141e-08, -8.53986817e-14, -2.74313141e-08, 1, -3.21661133e-08, 8.45163241e-14, 3.21661133e-08, 1)
end)

TeleportSection:NewButton("Volcano", "Teleport To Volcano", function()
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-2170.47461, 3.10753083, 1184.31238, 1, -1.76423551e-08, -6.78460109e-14, 1.76423551e-08, 1, 5.60610296e-08, 6.6856961e-14, -5.60610296e-08, 1)
end)

TeleportSection:NewButton("CandyLand", "Teleport To CandyLand", function()
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-2794.58252, 3.02753091, -269.236145, 1, -4.94351369e-08, 6.85546563e-13, 4.94351369e-08, 1, 2.69248535e-08, -6.86877584e-13, -2.69248535e-08, 1)
end)

TeleportSection:NewButton("Moon", "Teleport To Moon", function()
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-2250.82153, 1082.08459, -269.517639, 1, 0, 0, 0, 1, 0, 0, 0, 1)
end)

TeleportSection:NewButton("Beach", "Teleport To Beach", function()
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-3762.51294, 21.8042355, 713.681091, 1, 0, 0, 0, 1, 0, 0, 0, 1)
end)

TeleportSection:NewButton("Toxic", "Teleport To Toxic", function()
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-5407.35889, -6.36711502, -326.791656, 1, 0, 0, 0, 1, 0, 0, 0, 1)
end)

TeleportSection:NewButton("Anime", "Teleport To Anime", function()
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-7074.2793, -5.48361206, -253.660416, 1, 0, 0, 0, 1, 0, 0, 0, 1)
end)

TeleportSection:NewButton("Russo", "Teleport To Russo", function()
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-7072.17285, -6.08361197, -2099.8877, 1, 0, 0, 0, 1, 0, 0, 0, 1)
end)

TeleportSection:NewButton("City", "Teleport To City", function()
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-10692.5918, -15.8356638, -2045.87891, 1, 0, 0, 0, 1, 0, 0, 0, 1)
end)

TeleportSection:NewButton("Ninja", "Teleport To Ninja", function()
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-7609.51074, -10.864006, 2969.99756, 1, 0, 0, 0, 1, 0, 0, 0, 1)
end)

TeleportSection:NewButton("Heaven", "Teleport To Heaven", function()
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-8982.70508, 1660.93958, -2.82702136, 1, 0, 0, 0, 1, 0, 0, 0, 1)
end)

TeleportSection:NewButton("Hell", "Teleport To Hell", function()
    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-20373.5586, 828.790222, 991.757812, 1, 0, 0, 0, 1, 0, 0, 0, 1)
end)


--Main Toggles

MainSection:NewToggle("Auto Clicker", "Auto Clicker", function(state)
    if state then
        getgenv().Click = true

while getgenv().Click == true do

    local args = {
    [1] = "e"
}

game:GetService("ReplicatedStorage"):WaitForChild("Click"):FireServer(unpack(args))
    task.wait(0.0000000000000000001)
end
    else
        getgenv().Click = false

while getgenv().Click == true do

    local args = {
    [1] = "e"
}

game:GetService("ReplicatedStorage"):WaitForChild("Click"):FireServer(unpack(args))
    task.wait(0.0000000000000000001)
        end
    end
end)

--Hatch Section

local HatchsSection = Hatchs:NewSection("Auto Craft")


--Rebirth Toggles

RebirthsSection:NewToggle("Auto Rebirth (118)", "Auto Rebirth", function(state)
    if state then
        getgenv().Rebirth = true

while getgenv().Rebirth == true do

    local args = {
    [1] = "118",
    [2] = "a"
}

game:GetService("ReplicatedStorage"):WaitForChild("Rebirth"):FireServer(unpack(args))
    task.wait(0.00000001)
end
    else
        getgenv().Rebirth = false

while getgenv().Rebirth == true do

    local args = {
    [1] = "118",
    [2] = "a"
}

game:GetService("ReplicatedStorage"):WaitForChild("Rebirth"):FireServer(unpack(args))
    task.wait(0.00000001)
        end
    end
end)

--Super Rebirth Section

local RebirthsSection = Rebirths:NewSection("Auto Super Rebirth")


--Auto Craft Toggles

HatchsSection:NewToggle("Auto Craft", "Auto Craft All", function(state)
    if state then
        getgenv().Craft = true

while getgenv().Craft == true do

game:GetService("ReplicatedStorage"):WaitForChild("CraftAll"):FireServer()
    task.wait(1)
end
    else
        getgenv().Craft = false

while getgenv().Craft == true do

game:GetService("ReplicatedStorage"):WaitForChild("CraftAll"):FireServer()
    task.wait(1)
        end
    end
end)


--Super Rebirth Toggles

RebirthsSection:NewToggle("Auto Super Rebirth (35)", "Auto Super Rebirth", function(state)
    if state then
        getgenv().Super = true

while getgenv().Super == true do

local args = {
    [1] = "35",
    [2] = "a"
}

game:GetService("ReplicatedStorage"):WaitForChild("SuperRebirth"):FireServer(unpack(args))
    task.wait(0.00000001)
end
    else
        getgenv().Super = false

while getgenv().Super == true do

local args = {
    [1] = "35",
    [2] = "a"
}

game:GetService("ReplicatedStorage"):WaitForChild("SuperRebirth"):FireServer(unpack(args))
    task.wait(0.00000001)
        end
    end
end)

--Code Toggles

MainSection:NewButton("Auto Use Codes", "Auto Uses All Codes", function()
    getgenv().Code = true
while getgenv().Code == true do

local args = {
    [1] = "MARKETPLACE"
}

game:GetService("ReplicatedStorage").CheckCode:FireServer(unpack(args))

task.wait(0.1)

local args = {
    [1] = "TITANIC"
}

game:GetService("ReplicatedStorage").CheckCode:FireServer(unpack(args))

task.wait(0.1)

local args = {
    [1] = "10K"
}

game:GetService("ReplicatedStorage").CheckCode:FireServer(unpack(args))

task.wait(0.1)

local args = {
    [1] = "UFO"
}

game:GetService("ReplicatedStorage").CheckCode:FireServer(unpack(args))

task.wait(0.1)

local args = {
    [1] = "wednesday"
}

game:GetService("ReplicatedStorage").CheckCode:FireServer(unpack(args))

task.wait(0.1)

local args = {
    [1] = "devices"
}

game:GetService("ReplicatedStorage").CheckCode:FireServer(unpack(args))

task.wait(0.1)

local args = {
    [1] = "3klikes"
}

game:GetService("ReplicatedStorage").CheckCode:FireServer(unpack(args))

task.wait(0.1)

local args = {
    [1] = "CHRISTMAS"
}

game:GetService("ReplicatedStorage").CheckCode:FireServer(unpack(args))

task.wait(0.1)

local args = {
    [1] = "SANTA"
}

game:GetService("ReplicatedStorage").CheckCode:FireServer(unpack(args))

task.wait(0.1)

local args = {
    [1] = "1klikes"
}

game:GetService("ReplicatedStorage").CheckCode:FireServer(unpack(args))

task.wait(0.1)

local args = {
    [1] = "ninjaworld"
}

game:GetService("ReplicatedStorage").CheckCode:FireServer(unpack(args))

task.wait(0.1)

local args = {
    [1] = "500likes"
}

game:GetService("ReplicatedStorage").CheckCode:FireServer(unpack(args))

task.wait(0.1)

local args = {
    [1] = "thankyoukreek"
}

game:GetService("ReplicatedStorage").CheckCode:FireServer(unpack(args))

task.wait(0.1)

local args = {
    [1] = "like"
}

game:GetService("ReplicatedStorage").CheckCode:FireServer(unpack(args))

task.wait(0.1)

local args = {
    [1] = "return"
}

game:GetService("ReplicatedStorage").CheckCode:FireServer(unpack(args))

task.wait(0.1)

local args = {
    [1] = "update27"
}

game:GetService("ReplicatedStorage").CheckCode:FireServer(unpack(args))

task.wait(0.1)

local args = {
    [1] = "50klikes"
}

game:GetService("ReplicatedStorage").CheckCode:FireServer(unpack(args))

task.wait(0.1)

local args = {
    [1] = "hell"
}

game:GetService("ReplicatedStorage").CheckCode:FireServer(unpack(args))

task.wait(0.1)

local args = {
    [1] = "update26"
}

game:GetService("ReplicatedStorage").CheckCode:FireServer(unpack(args))

task.wait(0.1)

local args = {
    [1] = "35klikes"
}

game:GetService("ReplicatedStorage").CheckCode:FireServer(unpack(args))

task.wait(0.1)

local args = {
    [1] = "ninja"
}

game:GetService("ReplicatedStorage").CheckCode:FireServer(unpack(args))

task.wait(0.1)

local args = {
    [1] = "ephone"
}

game:GetService("ReplicatedStorage").CheckCode:FireServer(unpack(args))

task.wait(0.1)

local args = {
    [1] = "prime"
}

game:GetService("ReplicatedStorage").CheckCode:FireServer(unpack(args))

task.wait(0.1)

local args = {
    [1] = "HEAVENPART3"
}

game:GetService("ReplicatedStorage").CheckCode:FireServer(unpack(args))

task.wait(0.1)

local args = {
    [1] = "city"
}

game:GetService("ReplicatedStorage").CheckCode:FireServer(unpack(args))

task.wait(0.1)

local args = {
    [1] = "25klikes"
}

game:GetService("ReplicatedStorage").CheckCode:FireServer(unpack(args))

task.wait(0.1)

local args = {
    [1] = "heaven"
}

game:GetService("ReplicatedStorage").CheckCode:FireServer(unpack(args))

task.wait(0.1)

local args = {
    [1] = "russo"
}

game:GetService("ReplicatedStorage").CheckCode:FireServer(unpack(args))

task.wait(0.1)

local args = {
    [1] = "update16"
}

game:GetService("ReplicatedStorage").CheckCode:FireServer(unpack(args))

task.wait(0.1)

local args = {
    [1] = "mrbeast"
}

game:GetService("ReplicatedStorage").CheckCode:FireServer(unpack(args))

task.wait(0.1)

local args = {
    [1] = "10klikes"
}

game:GetService("ReplicatedStorage").CheckCode:FireServer(unpack(args))

task.wait(0.1)

local args = {
    [1] = "5klikes"
}

game:GetService("ReplicatedStorage").CheckCode:FireServer(unpack(args))

task.wait(0.1)

local args = {
    [1] = "MINIONS"
}

game:GetService("ReplicatedStorage").CheckCode:FireServer(unpack(args))

task.wait(0.1)

local args = {
    [1] = "1MVISITS"
}

game:GetService("ReplicatedStorage").CheckCode:FireServer(unpack(args))

task.wait(0.1)

local args = {
    [1] = "YOUTUBE"
}

game:GetService("ReplicatedStorage").CheckCode:FireServer(unpack(args))

task.wait(0.1)

local args = {
    [1] = "FLOPPA"
}

game:GetService("ReplicatedStorage").CheckCode:FireServer(unpack(args))

task.wait(0.1)

local args = {
    [1] = "2KLIKES"
}

game:GetService("ReplicatedStorage").CheckCode:FireServer(unpack(args))

task.wait(0.1)

local args = {
    [1] = "mini update"
}

game:GetService("ReplicatedStorage").CheckCode:FireServer(unpack(args))

task.wait(0.1)

local args = {
    [1] = "750k"
}

game:GetService("ReplicatedStorage").CheckCode:FireServer(unpack(args))

task.wait(0.1)

local args = {
    [1] = "SPACE"
}

game:GetService("ReplicatedStorage").CheckCode:FireServer(unpack(args))

task.wait(0.1)
        break
    end
end)

--Sliders

MiscSection:NewSlider("WalkSpeed", "WalkSpeed", 200, 28, function(s) -- 200 (MaxValue) | 0 (MinValue)
    game.Players.LocalPlayer.Character.Humanoid.WalkSpeed = s
end)

--Keybinds

MiscSection:NewKeybind("Keybind", "Changes Keybind", Enum.KeyCode.F, function()
	Library:ToggleUI()
end)


--Click Upgrade Toggles

UpgradesSection:NewToggle("Click Multiplier", "Auto Upgrades Click Multiplier", function(state)
    if state then
        getgenv().ClickMulti = true

while getgenv().ClickMulti == true do

    local args = {
    [1] = "Clicks",
    [2] = true
}

game:GetService("ReplicatedStorage").Upgrade:FireServer(unpack(args))
    task.wait(1)
end
    else
        getgenv().ClickMulti = false

while getgenv().ClickMulti == true do

    local args = {
    [1] = "Clicks",
    [2] = true
}

game:GetService("ReplicatedStorage").Upgrade:FireServer(unpack(args))
    task.wait(2)
        end
    end
end)

--Gem Upgrade Toggles

UpgradesSection:NewToggle("Gem Multiplier", "Auto Upgrades Gem Multiplier", function(state)
    if state then
        getgenv().Gem = true

while getgenv().Gem == true do

    local args = {
    [1] = "Gems",
    [2] = true
}

game:GetService("ReplicatedStorage").Upgrade:FireServer(unpack(args))
    task.wait(3)
end
    else
        getgenv().Gem = false

while getgenv().Gem == true do

    local args = {
    [1] = "Gems",
    [2] = true
}

game:GetService("ReplicatedStorage").Upgrade:FireServer(unpack(args))
    task.wait(3)
        end
    end
end)

--Speed Upgrade Toggles

UpgradesSection:NewToggle("Speed Multiplier", "Auto Upgrades Speed Multiplier", function(state)
    if state then
        getgenv().Speed = true

while getgenv().Speed == true do

    local args = {
    [1] = "Speed",
    [2] = true
}

game:GetService("ReplicatedStorage").Upgrade:FireServer(unpack(args))
    task.wait(3)
end
    else
        getgenv().Speed = false

while getgenv().Speed == true do

    local args = {
    [1] = "Speed",
    [2] = true
}

game:GetService("ReplicatedStorage").Upgrade:FireServer(unpack(args))
    task.wait(3)
        end
    end
end)

--Jump Upgrade Toggles

UpgradesSection:NewToggle("Jump Multiplier", "Auto Upgrades Jump Multiplier", function(state)
    if state then
        getgenv().Jump = true

while getgenv().Jump == true do

    local args = {
    [1] = "Jump",
    [2] = true
}

game:GetService("ReplicatedStorage").Upgrade:FireServer(unpack(args))
    task.wait(3)
end
    else
        getgenv().Jump = false

while getgenv().Jump == true do

    local args = {
    [1] = "Jump",
    [2] = true
}

game:GetService("ReplicatedStorage").Upgrade:FireServer(unpack(args))
    task.wait(3)
        end
    end
end)

--Rebirth Button Upgrade Toggles

UpgradesSection:NewToggle("Rebirth Buttons", "Auto Upgrades Rebirth Buttons", function(state)
    if state then
        getgenv().RebirthB = true

while getgenv().RebirthB == true do

    local args = {
    [1] = "Buttons",
    [2] = true
}

game:GetService("ReplicatedStorage").Upgrade:FireServer(unpack(args))
    task.wait(2)
end
    else
        getgenv().RebirthB = false

while getgenv().RebirthB == true do

    local args = {
    [1] = "Buttons",
    [2] = true
}

game:GetService("ReplicatedStorage").Upgrade:FireServer(unpack(args))
    task.wait(2)
        end
    end
end)

--Auto Clicker Upgrades

UpgradesSection:NewToggle("Auto Clicker", "Auto Upgrades Auto Clicker", function(state)
    if state then
        getgenv().AutoClicker = true

while getgenv().AutoClicker == true do

    local args = {
    [1] = "AutoClick",
    [2] = true
}

game:GetService("ReplicatedStorage").Upgrade:FireServer(unpack(args))
    task.wait(5)
end
    else
        getgenv().AutoClicker = false

while getgenv().AutoClicker == true do

    local args = {
    [1] = "AutoClick",
    [2] = true
}

game:GetService("ReplicatedStorage").Upgrade:FireServer(unpack(args))
    task.wait(5)
        end
    end
end)

--Inventory Space Upgrade Toggles

UpgradesSection:NewToggle("Inventory Space", "Auto Upgrades Inventory Space", function(state)
    if state then
        getgenv().Inv = true

while getgenv().Inv == true do

    local args = {
    [1] = "Inventory",
    [2] = true
}

game:GetService("ReplicatedStorage").Upgrade:FireServer(unpack(args))
    task.wait(3)
end
    else
        getgenv().Inv = false

while getgenv().Inv == true do

    local args = {
    [1] = "Inventory",
    [2] = true
}

game:GetService("ReplicatedStorage").Upgrade:FireServer(unpack(args))
    task.wait(3)
        end
    end
end)

--Luck Multiplier Upgrade Toggles

UpgradesSection:NewToggle("Luck Multiplier", "Auto Upgrades Luck Multiplier", function(state)
    if state then
        getgenv().Luck = true

while getgenv().Luck == true do

    local args = {
    [1] = "Luck",
    [2] = true
}

game:GetService("ReplicatedStorage").Upgrade:FireServer(unpack(args))
    task.wait(3)
end
    else
        getgenv().Luck = false

while getgenv().Luck == true do

    local args = {
    [1] = "Luck",
    [2] = true
}

game:GetService("ReplicatedStorage").Upgrade:FireServer(unpack(args))
    task.wait(3)
        end
    end
end)

--Pet Equip Upgrade Toggles

UpgradesSection:NewToggle("Pet Equips", "Auto Upgrades Pet Equips", function(state)
    if state then
        getgenv().Pet = true

while getgenv().Pet == true do

    local args = {
    [1] = "PetEquip",
    [2] = true
}

game:GetService("ReplicatedStorage").Upgrade:FireServer(unpack(args))
    task.wait(3)
end
    else
        getgenv().Pet = false

while getgenv().Pet == true do

    local args = {
    [1] = "PetEquip",
    [2] = true
}

game:GetService("ReplicatedStorage").Upgrade:FireServer(unpack(args))
    task.wait(3)
        end
    end
end)

--Instant Golden

UpgradesSection:NewToggle("Instant Golden", "Auto Upgrades Instant Golden", function(state)
    if state then
        getgenv().InstantGolden = true

while getgenv().InstantGolden == true do

    local args = {
    [1] = "InstantGolden",
    [2] = true
}

game:GetService("ReplicatedStorage").Upgrade:FireServer(unpack(args))
    task.wait(5)
end
    else
        getgenv().InstantGolden = false

while getgenv().InstantGolden == true do

    local args = {
    [1] = "InstantGolden",
    [2] = true
}

game:GetService("ReplicatedStorage").Upgrade:FireServer(unpack(args))
    task.wait(5)
        end
    end
end)

--Max Pet Level Increase Upgrade Toggles

UpgradesSection:NewToggle("Max Pet Level", "Auto Upgrades Max Pet Level", function(state)
    if state then
        getgenv().Level = true

while getgenv().Level == true do

    local args = {
    [1] = "MaxLevel",
    [2] = true
}

game:GetService("ReplicatedStorage").Upgrade:FireServer(unpack(args))
    task.wait(3)
end
    else
        getgenv().Level = false

while getgenv().Level == true do

    local args = {
    [1] = "MaxLevel",
    [2] = true
}

game:GetService("ReplicatedStorage").Upgrade:FireServer(unpack(args))
    task.wait(3)
        end
    end
end)

--XP Multiplier Toggles

UpgradesSection:NewToggle("Xp Multiplier", "Auto Upgrades Xp Multiplier", function(state)
    if state then
        getgenv().Xp = true

while getgenv().Xp == true do

    local args = {
    [1] = "XP",
    [2] = true
}

game:GetService("ReplicatedStorage").Upgrade:FireServer(unpack(args))
    task.wait(3)
end
    else
        getgenv().Xp = false

while getgenv().Xp == true do

    local args = {
    [1] = "XP",
    [2] = true
}

game:GetService("ReplicatedStorage").Upgrade:FireServer(unpack(args))
    task.wait(3)
        end
    end
end)

--Spawn Section

local HatchsSection = Hatchs:NewSection("Spawn")

--Spawn Egg Toggles

--Basic Egg

HatchsSection:NewToggle("Basic Egg", "Auto Hatch Basic Egg", function(state)
    if state then
        getgenv().BasicEgg = true

while getgenv().BasicEgg == true do

    local args = {
    [1] = "Basic Egg",
    [2] = "Triple",
    [3] = "asdgouhsaiugdhasoiudghodsagfasdgdsaoughsadoug"
}

game:GetService("ReplicatedStorage").HatchEvents.Hatch:FireServer(unpack(args))
    task.wait(0.0000000000000000001)
end
    else
        getgenv().BasicEgg = false

while getgenv().BasicEgg == true do

    local args = {
    [1] = "Basic Egg",
    [2] = "Triple",
    [3] = "asdgouhsaiugdhasoiudghodsagfasdgdsaoughsadoug"
}

game:GetService("ReplicatedStorage").HatchEvents.Hatch:FireServer(unpack(args))
    task.wait(0.0000000000000000001)
        end
    end
end)

--Epic Egg
   
HatchsSection:NewToggle("Epic Egg", "Auto Hatch Epic Egg", function(state)
    if state then
        getgenv().EpicEgg = true

while getgenv().EpicEgg == true do

    local args = {
    [1] = "Epic Egg",
    [2] = "Triple",
    [3] = "asdgouhsaiugdhasoiudghodsagfasdgdsaoughsadoug"
}

game:GetService("ReplicatedStorage").HatchEvents.Hatch:FireServer(unpack(args))
    task.wait(0.0000000000000000001)
end
    else
        getgenv().EpicEgg = false

while getgenv().EpicEgg == true do

    local args = {
    [1] = "Epic Egg",
    [2] = "Triple",
    [3] = "asdgouhsaiugdhasoiudghodsagfasdgdsaoughsadoug"
}

game:GetService("ReplicatedStorage").HatchEvents.Hatch:FireServer(unpack(args))
    task.wait(0.0000000000000000001)
        end
    end
end)

--Floppa Egg

HatchsSection:NewToggle("Floppa Egg", "Auto Hatch Floppa Egg", function(state)
    if state then
        getgenv().FloppaEgg = true

while getgenv().FloppaEgg == true do

    local args = {
    [1] = "Floppa Egg",
    [2] = "Triple",
    [3] = "asdgouhsaiugdhasoiudghodsagfasdgdsaoughsadoug"
}

game:GetService("ReplicatedStorage").HatchEvents.Hatch:FireServer(unpack(args))
    task.wait(0.0000000000000000001)
end
    else
        getgenv().FloppaEgg = false

while getgenv().FloppaEgg == true do

    local args = {
    [1] = "Floppa Egg",
    [2] = "Triple",
    [3] = "asdgouhsaiugdhasoiudghodsagfasdgdsaoughsadoug"
}

game:GetService("ReplicatedStorage").HatchEvents.Hatch:FireServer(unpack(args))
    task.wait(0.0000000000000000001)
        end
    end
end)

--Youtube Egg
HatchsSection:NewToggle("Youtube Egg", "Auto Hatch Youtube Egg", function(state)
    if state then
        getgenv().YoutubeEgg = true

while getgenv().YoutubeEgg == true do

    local args = {
    [1] = "Youtube Egg",
    [2] = "Triple",
    [3] = "asdgouhsaiugdhasoiudghodsagfasdgdsaoughsadoug"
}

game:GetService("ReplicatedStorage").HatchEvents.Hatch:FireServer(unpack(args))
    task.wait(0.0000000000000000001)
end
    else
        getgenv().YoutubeEgg = false

while getgenv().YoutubeEgg == true do

    local args = {
    [1] = "Youtube Egg",
    [2] = "Triple",
    [3] = "asdgouhsaiugdhasoiudghodsagfasdgdsaoughsadoug"
}

game:GetService("ReplicatedStorage").HatchEvents.Hatch:FireServer(unpack(args))
    task.wait(0.0000000000000000001)
        end
    end
end)

--Pet Clickers Egg

HatchsSection:NewToggle("Pet Clickers Egg", "Auto Hatch Pet Clickers Egg", function(state)
    if state then
        getgenv().PetClickersEgg = true

while getgenv().PetClickersEgg == true do

    local args = {
    [1] = "Pet Clickers Egg",
    [2] = "Triple",
    [3] = "asdgouhsaiugdhasoiudghodsagfasdgdsaoughsadoug"
}

game:GetService("ReplicatedStorage").HatchEvents.Hatch:FireServer(unpack(args))
    task.wait(0.0000000000000000001)
end
    else
        getgenv().PetClickersEgg = false

while getgenv().PetClickersEgg == true do

    local args = {
    [1] = "Pet Clickers Egg",
    [2] = "Triple",
    [3] = "asdgouhsaiugdhasoiudghodsagfasdgdsaoughsadoug"
}

game:GetService("ReplicatedStorage").HatchEvents.Hatch:FireServer(unpack(args))
    task.wait(0.0000000000000000001)
        end
    end
end)

--Summer Egg

HatchsSection:NewToggle("Summer Egg", "Auto Hatch Summer Egg", function(state)
    if state then
        getgenv().SummerEgg = true

while getgenv().SummerEgg == true do

    local args = {
    [1] = "Summer Egg",
    [2] = "Triple",
    [3] = "asdgouhsaiugdhasoiudghodsagfasdgdsaoughsadoug"
}

game:GetService("ReplicatedStorage").HatchEvents.Hatch:FireServer(unpack(args))
    task.wait(0.0000000000000000001)
end
    else
        getgenv().SummerEgg = false

while getgenv().SummerEgg == true do

    local args = {
    [1] = "Summer Egg",
    [2] = "Triple",
    [3] = "asdgouhsaiugdhasoiudghodsagfasdgdsaoughsadoug"
}

game:GetService("ReplicatedStorage").HatchEvents.Hatch:FireServer(unpack(args))
    task.wait(0.0000000000000000001)
        end
    end
end)


--Desert Section

local HatchsSection = Hatchs:NewSection("Desert")

--Desert Egg Toggles

--Desert Egg

HatchsSection:NewToggle("Desert Egg", "Auto Hatch Desert Egg", function(state)
    if state then
        getgenv().DesertEgg = true

while getgenv().DesertEgg == true do

    local args = {
    [1] = "Desert Egg",
    [2] = "Triple",
    [3] = "asdgouhsaiugdhasoiudghodsagfasdgdsaoughsadoug"
}

game:GetService("ReplicatedStorage").HatchEvents.Hatch:FireServer(unpack(args))
    task.wait(0.0000000000000000001)
end
    else
        getgenv().DesertEgg = false

while getgenv().DesertEgg == true do

    local args = {
    [1] = "Desert Egg",
    [2] = "Triple",
    [3] = "asdgouhsaiugdhasoiudghodsagfasdgdsaoughsadoug"
}

game:GetService("ReplicatedStorage").HatchEvents.Hatch:FireServer(unpack(args))
    task.wait(0.0000000000000000001)
        end
    end
end)

--Desert Myths Egg

HatchsSection:NewToggle("Desert Myths Egg", "Auto Hatch Desert Myths Egg", function(state)
    if state then
        getgenv().DesertMythsEgg = true

while getgenv().DesertMythsEgg == true do

    local args = {
    [1] = "Desert Myths Egg",
    [2] = "Triple",
    [3] = "asdgouhsaiugdhasoiudghodsagfasdgdsaoughsadoug"
}

game:GetService("ReplicatedStorage").HatchEvents.Hatch:FireServer(unpack(args))
    task.wait(0.0000000000000000001)
end
    else
        getgenv().DesertMythsEgg = false

while getgenv().DesertMythsEgg == true do

    local args = {
    [1] = "Desert Myths Egg",
    [2] = "Triple",
    [3] = "asdgouhsaiugdhasoiudghodsagfasdgdsaoughsadoug"
}

game:GetService("ReplicatedStorage").HatchEvents.Hatch:FireServer(unpack(args))
    task.wait(0.0000000000000000001)
        end
    end
end)

--Desert Structures Egg

HatchsSection:NewToggle("Desert Structures Egg", "Auto Hatch Desert Structures Egg", function(state)
    if state then
        getgenv().DesertStructuresEgg = true

while getgenv().DesertStructuresEgg == true do

    local args = {
    [1] = "Desert Structures Egg",
    [2] = "Triple",
    [3] = "asdgouhsaiugdhasoiudghodsagfasdgdsaoughsadoug"
}

game:GetService("ReplicatedStorage").HatchEvents.Hatch:FireServer(unpack(args))
    task.wait(0.0000000000000000001)
end
    else
        getgenv().DesertStructuresEgg = false

while getgenv().DesertStructuresEgg == true do

    local args = {
    [1] = "Desert Structures Egg",
    [2] = "Triple",
    [3] = "asdgouhsaiugdhasoiudghodsagfasdgdsaoughsadoug"
}

game:GetService("ReplicatedStorage").HatchEvents.Hatch:FireServer(unpack(args))
    task.wait(0.0000000000000000001)
        end
    end
end)

--Egyptian Gods Egg

HatchsSection:NewToggle("Egyptian Gods Egg", "Auto Hatch Egyptian Gods Egg", function(state)
    if state then
        getgenv().EgyptianGodsEgg = true

while getgenv().EgyptianGodsEgg == true do

    local args = {
    [1] = "Egyptian Gods Egg",
    [2] = "Triple",
    [3] = "asdgouhsaiugdhasoiudghodsagfasdgdsaoughsadoug"
}

game:GetService("ReplicatedStorage").HatchEvents.Hatch:FireServer(unpack(args))
    task.wait(0.0000000000000000001)
end
    else
        getgenv().EgyptianGodsEgg = false

while getgenv().EgyptianGodsEgg == true do

    local args = {
    [1] = "Egyptian Gods Egg",
    [2] = "Triple",
    [3] = "asdgouhsaiugdhasoiudghodsagfasdgdsaoughsadoug"
}

game:GetService("ReplicatedStorage").HatchEvents.Hatch:FireServer(unpack(args))
    task.wait(0.0000000000000000001)
        end
    end
end)

--Ocean Section

local HatchsSection = Hatchs:NewSection("Ocean")

--Ocean Egg Toggles

--Oceanic Egg

HatchsSection:NewToggle("Oceanic Egg", "Auto Hatch Oceanic Egg", function(state)
    if state then
        getgenv().OceanicEgg = true

while getgenv().OceanicEgg == true do

    local args = {
    [1] = "Oceanic Egg",
    [2] = "Triple",
    [3] = "asdgouhsaiugdhasoiudghodsagfasdgdsaoughsadoug"
}

game:GetService("ReplicatedStorage").HatchEvents.Hatch:FireServer(unpack(args))
    task.wait(0.0000000000000000001)
end
    else
        getgenv().OceanicEgg = false

while getgenv().OceanicEgg == true do

    local args = {
    [1] = "Oceanic Egg",
    [2] = "Triple",
    [3] = "asdgouhsaiugdhasoiudghodsagfasdgdsaoughsadoug"
}

game:GetService("ReplicatedStorage").HatchEvents.Hatch:FireServer(unpack(args))
    task.wait(0.0000000000000000001)
        end
    end
end)

--Ocean Monsters Egg

HatchsSection:NewToggle("Ocean Monsters Egg", "Auto Hatch Ocean Monsters Egg", function(state)
    if state then
        getgenv().OceanMonstersEgg = true

while getgenv().OceanMonstersEgg == true do

    local args = {
    [1] = "Ocean Monsters Egg",
    [2] = "Triple",
    [3] = "asdgouhsaiugdhasoiudghodsagfasdgdsaoughsadoug"
}

game:GetService("ReplicatedStorage").HatchEvents.Hatch:FireServer(unpack(args))
    task.wait(0.0000000000000000001)
end
    else
        getgenv().OceanMonstersEgg = false

while getgenv().OceanMonstersEgg == true do

    local args = {
    [1] = "Ocean Monsters Egg",
    [2] = "Triple",
    [3] = "asdgouhsaiugdhasoiudghodsagfasdgdsaoughsadoug"
}

game:GetService("ReplicatedStorage").HatchEvents.Hatch:FireServer(unpack(args))
    task.wait(0.0000000000000000001)
        end
    end
end)

--Ocean King Egg

HatchsSection:NewToggle("Ocean King Egg", "Auto Hatch Ocean King Egg", function(state)
    if state then
        getgenv().OceanKingEgg = true

while getgenv().OceanKingEgg == true do

    local args = {
    [1] = "Ocean King Egg",
    [2] = "Triple",
    [3] = "asdgouhsaiugdhasoiudghodsagfasdgdsaoughsadoug"
}

game:GetService("ReplicatedStorage").HatchEvents.Hatch:FireServer(unpack(args))
    task.wait(0.0000000000000000001)
end
    else
        getgenv().OceanKingEgg = false

while getgenv().OceanKingEgg == true do

    local args = {
    [1] = "Ocean King Egg",
    [2] = "Triple",
    [3] = "asdgouhsaiugdhasoiudghodsagfasdgdsaoughsadoug"
}

game:GetService("ReplicatedStorage").HatchEvents.Hatch:FireServer(unpack(args))
    task.wait(0.0000000000000000001)
        end
    end
end)

--Ocean Structures Egg

HatchsSection:NewToggle("Ocean Structures Egg", "Auto Hatch Ocean Structures Egg", function(state)
    if state then
        getgenv().OceanStructuresEgg = true

while getgenv().OceanStructuresEgg == true do

    local args = {
    [1] = "Ocean Structures Egg",
    [2] = "Triple",
    [3] = "asdgouhsaiugdhasoiudghodsagfasdgdsaoughsadoug"
}

game:GetService("ReplicatedStorage").HatchEvents.Hatch:FireServer(unpack(args))
    task.wait(0.0000000000000000001)
end
    else
        getgenv().OceanStructuresEgg = false

while getgenv().OceanStructuresEgg == true do

    local args = {
    [1] = "Ocean Structures Egg",
    [2] = "Triple",
    [3] = "asdgouhsaiugdhasoiudghodsagfasdgdsaoughsadoug"
}

game:GetService("ReplicatedStorage").HatchEvents.Hatch:FireServer(unpack(args))
    task.wait(0.0000000000000000001)
        end
    end
end)

--Volcano Section

local HatchsSection = Hatchs:NewSection("Volcano")

--Volcano Egg Toggles

--Dead Egg

HatchsSection:NewToggle("Dead Egg", "Auto Hatch Dead Egg", function(state)
    if state then
        getgenv().DeadEgg = true

while getgenv().DeadEgg == true do

    local args = {
    [1] = "Dead Egg",
    [2] = "Triple",
    [3] = "asdgouhsaiugdhasoiudghodsagfasdgdsaoughsadoug"
}

game:GetService("ReplicatedStorage").HatchEvents.Hatch:FireServer(unpack(args))
    task.wait(0.0000000000000000001)
end
    else
        getgenv().DeadEgg = false

while getgenv().DeadEgg == true do

    local args = {
    [1] = "Dead Egg",
    [2] = "Triple",
    [3] = "asdgouhsaiugdhasoiudghodsagfasdgdsaoughsadoug"
}

game:GetService("ReplicatedStorage").HatchEvents.Hatch:FireServer(unpack(args))
    task.wait(0.0000000000000000001)
        end
    end
end)

--Lava Egg

HatchsSection:NewToggle("Lava Egg", "Auto Hatch Lava Egg", function(state)
    if state then
        getgenv().LavaEgg = true

while getgenv().LavaEgg == true do

    local args = {
    [1] = "Lava Egg",
    [2] = "Triple",
    [3] = "asdgouhsaiugdhasoiudghodsagfasdgdsaoughsadoug"
}

game:GetService("ReplicatedStorage").HatchEvents.Hatch:FireServer(unpack(args))
    task.wait(0.0000000000000000001)
end
    else
        getgenv().LavaEgg = false

while getgenv().LavaEgg == true do

    local args = {
    [1] = "Lava Egg",
    [2] = "Triple",
    [3] = "asdgouhsaiugdhasoiudghodsagfasdgdsaoughsadoug"
}

game:GetService("ReplicatedStorage").HatchEvents.Hatch:FireServer(unpack(args))
    task.wait(0.0000000000000000001)
        end
    end
end)

--Volcanic Egg

HatchsSection:NewToggle("Volcanic Egg", "Auto Hatch Volcanic Egg", function(state)
    if state then
        getgenv().VolcanicEgg = true

while getgenv().VolcanicEgg == true do

    local args = {
    [1] = "Volcanic Egg",
    [2] = "Triple",
    [3] = "asdgouhsaiugdhasoiudghodsagfasdgdsaoughsadoug"
}

game:GetService("ReplicatedStorage").HatchEvents.Hatch:FireServer(unpack(args))
    task.wait(0.0000000000000000001)
end
    else
        getgenv().VolcanicEgg = false

while getgenv().VolcanicEgg == true do

    local args = {
    [1] = "Volcanic Egg",
    [2] = "Triple",
    [3] = "asdgouhsaiugdhasoiudghodsagfasdgdsaoughsadoug"
}

game:GetService("ReplicatedStorage").HatchEvents.Hatch:FireServer(unpack(args))
    task.wait(0.0000000000000000001)
        end
    end
end)

--Lava God Egg

HatchsSection:NewToggle("Lava God Egg", "Auto Hatch Lava God Egg", function(state)
    if state then
        getgenv().LavaGodEgg = true

while getgenv().LavaGodEgg == true do

    local args = {
    [1] = "Lava God Egg",
    [2] = "Triple",
    [3] = "asdgouhsaiugdhasoiudghodsagfasdgdsaoughsadoug"
}

game:GetService("ReplicatedStorage").HatchEvents.Hatch:FireServer(unpack(args))
    task.wait(0.0000000000000000001)
end
    else
        getgenv().LavaGodEgg = false

while getgenv().LavaGodEgg == true do

    local args = {
    [1] = "Lava God Egg",
    [2] = "Triple",
    [3] = "asdgouhsaiugdhasoiudghodsagfasdgdsaoughsadoug"
}

game:GetService("ReplicatedStorage").HatchEvents.Hatch:FireServer(unpack(args))
    task.wait(0.0000000000000000001)
        end
    end
end)

--CandyLand Section

local HatchsSection = Hatchs:NewSection("CandyLand")

--CandyLand Egg Toggles

--Candy Egg

HatchsSection:NewToggle("Candy Egg", "Auto Hatch Candy Egg", function(state)
    if state then
        getgenv().CandyEgg = true

while getgenv().CandyEgg == true do

    local args = {
    [1] = "Candy Egg",
    [2] = "Triple",
    [3] = "asdgouhsaiugdhasoiudghodsagfasdgdsaoughsadoug"
}

game:GetService("ReplicatedStorage").HatchEvents.Hatch:FireServer(unpack(args))
    task.wait(0.0000000000000000001)
end
    else
        getgenv().CandyEgg = false

while getgenv().CandyEgg == true do

    local args = {
    [1] = "Candy Egg",
    [2] = "Triple",
    [3] = "asdgouhsaiugdhasoiudghodsagfasdgdsaoughsadoug"
}

game:GetService("ReplicatedStorage").HatchEvents.Hatch:FireServer(unpack(args))
    task.wait(0.0000000000000000001)
        end
    end
end)

--Candy Monsters Egg

HatchsSection:NewToggle("Candy Monsters Egg", "Auto Hatch Candy Monsters Egg", function(state)
    if state then
        getgenv().CandyMonstersEgg = true

while getgenv().CandyMonstersEgg == true do

    local args = {
    [1] = "Candy Monsters Egg",
    [2] = "Triple",
    [3] = "asdgouhsaiugdhasoiudghodsagfasdgdsaoughsadoug"
}

game:GetService("ReplicatedStorage").HatchEvents.Hatch:FireServer(unpack(args))
    task.wait(0.0000000000000000001)
end
    else
        getgenv().CandyMonstersEgg = false

while getgenv().CandyMonstersEgg == true do

    local args = {
    [1] = "Candy Monsters Egg",
    [2] = "Triple",
    [3] = "asdgouhsaiugdhasoiudghodsagfasdgdsaoughsadoug"
}

game:GetService("ReplicatedStorage").HatchEvents.Hatch:FireServer(unpack(args))
    task.wait(0.0000000000000000001)
        end
    end
end)

--Candy Structures Egg

HatchsSection:NewToggle("Candy Structures Egg", "Auto Hatch Candy Structures Egg", function(state)
    if state then
        getgenv().CandyStructuresEgg = true

while getgenv().CandyStructuresEgg == true do

    local args = {
    [1] = "Candy Structures Egg",
    [2] = "Triple",
    [3] = "asdgouhsaiugdhasoiudghodsagfasdgdsaoughsadoug"
}

game:GetService("ReplicatedStorage").HatchEvents.Hatch:FireServer(unpack(args))
    task.wait(0.0000000000000000001)
end
    else
        getgenv().CandyStructuresEgg = false

while getgenv().CandyStructuresEgg == true do

    local args = {
    [1] = "Candy Structures Egg",
    [2] = "Triple",
    [3] = "asdgouhsaiugdhasoiudghodsagfasdgdsaoughsadoug"
}

game:GetService("ReplicatedStorage").HatchEvents.Hatch:FireServer(unpack(args))
    task.wait(0.0000000000000000001)
        end
    end
end)

--Candy War Egg

HatchsSection:NewToggle("Candy War Egg", "Auto Hatch Candy War Egg", function(state)
    if state then
        getgenv().CandyWarEgg = true

while getgenv().CandyWarEgg == true do

    local args = {
    [1] = "Candy War Egg",
    [2] = "Triple",
    [3] = "asdgouhsaiugdhasoiudghodsagfasdgdsaoughsadoug"
}

game:GetService("ReplicatedStorage").HatchEvents.Hatch:FireServer(unpack(args))
    task.wait(0.0000000000000000001)
end
    else
        getgenv().CandyWarEgg = false

while getgenv().CandyWarEgg == true do

    local args = {
    [1] = "Candy War Egg",
    [2] = "Triple",
    [3] = "asdgouhsaiugdhasoiudghodsagfasdgdsaoughsadoug"
}

game:GetService("ReplicatedStorage").HatchEvents.Hatch:FireServer(unpack(args))
    task.wait(0.0000000000000000001)
        end
    end
end)

--Moon Section
local HatchsSection = Hatchs:NewSection("Moon")

--Moon Egg Toggles

--Moon Egg

HatchsSection:NewToggle("Moon Egg", "Auto Hatch Moon Egg", function(state)
    if state then
        getgenv().MoonEgg = true

while getgenv().MoonEgg == true do

    local args = {
    [1] = "Moon Egg",
    [2] = "Triple",
    [3] = "asdgouhsaiugdhasoiudghodsagfasdgdsaoughsadoug"
}

game:GetService("ReplicatedStorage").HatchEvents.Hatch:FireServer(unpack(args))
    task.wait(0.0000000000000000001)
end
    else
       getgenv().MoonEgg = false

while getgenv().MoonEgg == true do

    local args = {
    [1] = "Moon Egg",
    [2] = "Triple",
    [3] = "asdgouhsaiugdhasoiudghodsagfasdgdsaoughsadoug"
}

game:GetService("ReplicatedStorage").HatchEvents.Hatch:FireServer(unpack(args))
    task.wait(0.0000000000000000001)
        end
    end
end)

--Asteroid Egg

HatchsSection:NewToggle("Asteroid Egg", "Auto Hatch Asteroid Egg", function(state)
    if state then
        getgenv().AsteroidEgg = true

while getgenv().AsteroidEgg == true do

    local args = {
    [1] = "Asteroid Egg",
    [2] = "Triple",
    [3] = "asdgouhsaiugdhasoiudghodsagfasdgdsaoughsadoug"
}

game:GetService("ReplicatedStorage").HatchEvents.Hatch:FireServer(unpack(args))
    task.wait(0.0000000000000000001)
end
    else
        getgenv().AsteroidEgg = false

while getgenv().AsteroidEgg == true do

    local args = {
    [1] = "Asteroid Egg",
    [2] = "Triple",
    [3] = "asdgouhsaiugdhasoiudghodsagfasdgdsaoughsadoug"
}

game:GetService("ReplicatedStorage").HatchEvents.Hatch:FireServer(unpack(args))
    task.wait(0.0000000000000000001)
        end
    end
end)

--Beach Section

local HatchsSection = Hatchs:NewSection("Beach")

--Beach Egg Toggles

--Beach Egg

HatchsSection:NewToggle("Beach Egg", "Auto Hatch Beach Egg", function(state)
    if state then
        getgenv().BeachEgg = true

while getgenv().BeachEgg == true do

    local args = {
    [1] = "Beach Egg",
    [2] = "Triple",
    [3] = "asdgouhsaiugdhasoiudghodsagfasdgdsaoughsadoug"
}

game:GetService("ReplicatedStorage").HatchEvents.Hatch:FireServer(unpack(args))
    task.wait(0.0000000000000000001)
end
    else
        getgenv().BeachEgg = false

while getgenv().BeachEgg == true do

    local args = {
    [1] = "Beach Egg",
    [2] = "Triple",
    [3] = "asdgouhsaiugdhasoiudghodsagfasdgdsaoughsadoug"
}

game:GetService("ReplicatedStorage").HatchEvents.Hatch:FireServer(unpack(args))
    task.wait(0.0000000000000000001)
        end
    end
end)

--Coconut Egg

HatchsSection:NewToggle("Coconut Egg", "Auto Hatch Coconut Egg", function(state)
    if state then
        getgenv().CoconutEgg = true

while getgenv().CoconutEgg == true do

    local args = {
    [1] = "Coconut Egg",
    [2] = "Triple",
    [3] = "asdgouhsaiugdhasoiudghodsagfasdgdsaoughsadoug"
}

game:GetService("ReplicatedStorage").HatchEvents.Hatch:FireServer(unpack(args))
    task.wait(0.0000000000000000001)
end
    else
        getgenv().CoconutEgg = false

while getgenv().CoconutEgg == true do

    local args = {
    [1] = "Coconut Egg",
    [2] = "Triple",
    [3] = "asdgouhsaiugdhasoiudghodsagfasdgdsaoughsadoug"
}

game:GetService("ReplicatedStorage").HatchEvents.Hatch:FireServer(unpack(args))
    task.wait(0.0000000000000000001)
        end
    end
end)

--Toxic Section

local HatchsSection = Hatchs:NewSection("Toxic")

--Toxic Egg Toggles

--Toxic Egg

HatchsSection:NewToggle("Toxic Egg", "Auto Hatch Toxic Egg", function(state)
    if state then
        getgenv().ToxicEgg = true

while getgenv().ToxicEgg == true do

    local args = {
    [1] = "Toxic Egg",
    [2] = "Triple",
    [3] = "asdgouhsaiugdhasoiudghodsagfasdgdsaoughsadoug"
}

game:GetService("ReplicatedStorage").HatchEvents.Hatch:FireServer(unpack(args))
    task.wait(0.0000000000000000001)
end
    else
        getgenv().ToxicEgg = false

while getgenv().ToxicEgg == true do

    local args = {
    [1] = "Toxic Egg",
    [2] = "Triple",
    [3] = "asdgouhsaiugdhasoiudghodsagfasdgdsaoughsadoug"
}

game:GetService("ReplicatedStorage").HatchEvents.Hatch:FireServer(unpack(args))
    task.wait(0.0000000000000000001)
        end
    end
end)

--Anime Section

local HatchsSection = Hatchs:NewSection("Anime")

--Anime Egg Toggles

--Anime Egg

HatchsSection:NewToggle("Anime Egg", "Auto Hatch Anime Egg", function(state)
    if state then
        getgenv().AnimeEgg = true

while getgenv().AnimeEgg == true do

    local args = {
    [1] = "Anime Egg",
    [2] = "Triple",
    [3] = "asdgouhsaiugdhasoiudghodsagfasdgdsaoughsadoug"
}

game:GetService("ReplicatedStorage").HatchEvents.Hatch:FireServer(unpack(args))
    task.wait(0.0000000000000000001)
end
    else
        getgenv().AnimeEgg = false

while getgenv().AnimeEgg == true do

    local args = {
    [1] = "Anime Egg",
    [2] = "Triple",
    [3] = "asdgouhsaiugdhasoiudghodsagfasdgdsaoughsadoug"
}

game:GetService("ReplicatedStorage").HatchEvents.Hatch:FireServer(unpack(args))
    task.wait(0.0000000000000000001)
        end
    end
end)

--Russo Section

local HatchsSection = Hatchs:NewSection("Russo")

--Russo Egg Toggles

--Russo Egg

HatchsSection:NewToggle("Russo Egg", "Auto Hatch Russo Egg", function(state)
    if state then
        getgenv().RussoEgg = true

while getgenv().RussoEgg == true do

    local args = {
    [1] = "Russo Egg",
    [2] = "Triple",
    [3] = "asdgouhsaiugdhasoiudghodsagfasdgdsaoughsadoug"
}

game:GetService("ReplicatedStorage").HatchEvents.Hatch:FireServer(unpack(args))
    task.wait(0.0000000000000000001)
end
    else
        getgenv().RussoEgg = false

while getgenv().RussoEgg == true do

    local args = {
    [1] = "Russo Egg",
    [2] = "Triple",
    [3] = "asdgouhsaiugdhasoiudghodsagfasdgdsaoughsadoug"
}

game:GetService("ReplicatedStorage").HatchEvents.Hatch:FireServer(unpack(args))
    task.wait(0.0000000000000000001)
        end
    end
end)

--City Section

local HatchsSection = Hatchs:NewSection("City")

--City Egg Toggles

--City Egg

HatchsSection:NewToggle("City Egg", "Auto Hatch City Egg", function(state)
    if state then
        getgenv().CityEgg = true

while getgenv().CityEgg == true do

    local args = {
    [1] = "City Egg",
    [2] = "Triple",
    [3] = "asdgouhsaiugdhasoiudghodsagfasdgdsaoughsadoug"
}

game:GetService("ReplicatedStorage").HatchEvents.Hatch:FireServer(unpack(args))
    task.wait(0.0000000000000000001)
end
    else
        getgenv().CityEgg = false

while getgenv().CityEgg == true do

    local args = {
    [1] = "City Egg",
    [2] = "Triple",
    [3] = "asdgouhsaiugdhasoiudghodsagfasdgdsaoughsadoug"
}

game:GetService("ReplicatedStorage").HatchEvents.Hatch:FireServer(unpack(args))
    task.wait(0.0000000000000000001)
        end
    end
end)

--Ninja Section

local HatchsSection = Hatchs:NewSection("Ninja")

--Ninja Egg Toggles

--Ninja Egg

HatchsSection:NewToggle("Ninja Egg", "Auto Hatch Ninja Egg", function(state)
    if state then
        getgenv().NinjaEgg = true

while getgenv().NinjaEgg == true do

    local args = {
    [1] = "Ninja Egg",
    [2] = "Triple",
    [3] = "asdgouhsaiugdhasoiudghodsagfasdgdsaoughsadoug"
}

game:GetService("ReplicatedStorage").HatchEvents.Hatch:FireServer(unpack(args))
    task.wait(0.0000000000000000001)
end
    else
        getgenv().NinjaEgg = false

while getgenv().NinjaEgg == true do

    local args = {
    [1] = "Ninja Egg",
    [2] = "Triple",
    [3] = "asdgouhsaiugdhasoiudghodsagfasdgdsaoughsadoug"
}

game:GetService("ReplicatedStorage").HatchEvents.Hatch:FireServer(unpack(args))
    task.wait(0.0000000000000000001)
        end
    end
end)

--Heaven Section

local HatchsSection = Hatchs:NewSection("Heaven")

--Heaven Egg Toggles

--AngelicEgg

HatchsSection:NewToggle("Angelic Egg", "Auto Hatch Angelic Egg", function(state)
    if state then
        getgenv().AngelicEgg = true

while getgenv().AngelicEgg == true do

    local args = {
    [1] = "Angelic Egg",
    [2] = "Triple",
    [3] = "asdgouhsaiugdhasoiudghodsagfasdgdsaoughsadoug"
}

game:GetService("ReplicatedStorage").HatchEvents.Hatch:FireServer(unpack(args))
    task.wait(0.0000000000000000001)
end
    else
        getgenv().AngelicEgg = false

while getgenv().AngelicEgg == true do

    local args = {
    [1] = "Angelic Egg",
    [2] = "Triple",
    [3] = "asdgouhsaiugdhasoiudghodsagfasdgdsaoughsadoug"
}

game:GetService("ReplicatedStorage").HatchEvents.Hatch:FireServer(unpack(args))
    task.wait(0.0000000000000000001)
        end
    end
end)

--Ophanim Egg

HatchsSection:NewToggle("Ophanim Egg", "Auto Hatch Ophanim Egg", function(state)
    if state then
        getgenv().OphanimEgg = true

while getgenv().OphanimEgg == true do

    local args = {
    [1] = "Ophanim Egg",
    [2] = "Triple",
    [3] = "asdgouhsaiugdhasoiudghodsagfasdgdsaoughsadoug"
}

game:GetService("ReplicatedStorage").HatchEvents.Hatch:FireServer(unpack(args))
    task.wait(0.0000000000000000001)
end
    else
        getgenv().OphanimEgg = false

while getgenv().OphanimEgg == true do

    local args = {
    [1] = "Ophanim Egg",
    [2] = "Triple",
    [3] = "asdgouhsaiugdhasoiudghodsagfasdgdsaoughsadoug"
}

game:GetService("ReplicatedStorage").HatchEvents.Hatch:FireServer(unpack(args))
    task.wait(0.0000000000000000001)
        end
    end
end)

--Seraphim Egg

HatchsSection:NewToggle("Seraphim Egg", "Auto Hatch Seraphim Egg", function(state)
    if state then
        getgenv().SeraphimEgg = true

while getgenv().SeraphimEgg == true do

    local args = {
    [1] = "Seraphim Egg",
    [2] = "Triple",
    [3] = "asdgouhsaiugdhasoiudghodsagfasdgdsaoughsadoug"
}

game:GetService("ReplicatedStorage").HatchEvents.Hatch:FireServer(unpack(args))
    task.wait(0.0000000000000000001)
end
    else
        getgenv().SeraphimEgg = false

while getgenv().SeraphimEgg == true do

    local args = {
    [1] = "Seraphim Egg",
    [2] = "Triple",
    [3] = "asdgouhsaiugdhasoiudghodsagfasdgdsaoughsadoug"
}

game:GetService("ReplicatedStorage").HatchEvents.Hatch:FireServer(unpack(args))
    task.wait(0.0000000000000000001)
        end
    end
end)

--Hell Section

local HatchsSection = Hatchs:NewSection("Hell")

--Hell Egg Toggles

--Hell Egg

HatchsSection:NewToggle("Hell Egg", "Auto Hatch Hell Egg", function(state)
    if state then
        getgenv().HellEgg = true

while getgenv().HellEgg == true do

    local args = {
    [1] = "Hell Egg",
    [2] = "Triple",
    [3] = "asdgouhsaiugdhasoiudghodsagfasdgdsaoughsadoug"
}

game:GetService("ReplicatedStorage").HatchEvents.Hatch:FireServer(unpack(args))
    task.wait(0.0000000000000000001)
end
    else
        getgenv().HellEgg = false

while getgenv().HellEgg == true do

    local args = {
    [1] = "Hell Egg",
    [2] = "Triple",
    [3] = "asdgouhsaiugdhasoiudghodsagfasdgdsaoughsadoug"
}

game:GetService("ReplicatedStorage").HatchEvents.Hatch:FireServer(unpack(args))
    task.wait(0.0000000000000000001)
        end
    end
end)

--Auto Super Rebirth Section

local UpgradesSection = Upgrades:NewSection("Auto Super Upgrades")

--Super Rebirth Button Upgrades

UpgradesSection:NewToggle("Super Rebirth Buttons", "Auto Upgrade Super Rebirth Buttons", function(state)
    if state then
        getgenv().SuperRebirthButton = true

while getgenv().SuperRebirthButton == true do

    local args = {
    [1] = "Buttons",
    [2] = true
}

game:GetService("ReplicatedStorage").SuperUpgrade:FireServer(unpack(args))
    task.wait(2)
end
    else
        getgenv().SuperRebirthButton = false

while getgenv().SuperRebirthButton == true do

    local args = {
    [1] = "Buttons",
    [2] = true
}

game:GetService("ReplicatedStorage").SuperUpgrade:FireServer(unpack(args))
    task.wait(2)
        end
    end
end)

--Super Rebirth Multiplier

UpgradesSection:NewToggle("Super Rebirth Multiplier", "Auto Upgrade Super Rebirth Multiplier", function(state)
    if state then
        getgenv().SuperRebirthButton = true

while getgenv().SuperRebirthButton == true do

    local args = {
    [1] = "Rebirths",
    [2] = true
}

game:GetService("ReplicatedStorage").SuperUpgrade:FireServer(unpack(args))
    task.wait(2)
end
    else
        getgenv().SuperRebirthButton = false

while getgenv().SuperRebirthButton == true do

    local args = {
    [1] = "Rebirths",
    [2] = true
}

game:GetService("ReplicatedStorage").SuperUpgrade:FireServer(unpack(args))
    task.wait(2)
        end
    end
end)

--Shard Equips Upgrades

UpgradesSection:NewToggle("Shard Equips", "Auto Upgrade Shard Equips", function(state)
    if state then
        getgenv().ShardEquips = true

while getgenv().ShardEquips == true do

    local args = {
    [1] = "ShardEquips",
    [2] = true
}

game:GetService("ReplicatedStorage").SuperUpgrade:FireServer(unpack(args))
    task.wait(3)
end
    else
        getgenv().ShardEquips = false

while getgenv().ShardEquips == true do

    local args = {
    [1] = "ShardEquips",
    [2] = true
}

game:GetService("ReplicatedStorage").SuperUpgrade:FireServer(unpack(args))
    task.wait(3)
        end
    end
end)

--Shard Inventory Upgrades

UpgradesSection:NewToggle("Shard Inventory", "Auto Upgrades Shard Inventory", function(state)
    if state then
        getgenv().ShardInv = true

while getgenv().ShardInv == true do

    local args = {
    [1] = "ShardInv",
    [2] = true
}

game:GetService("ReplicatedStorage").SuperUpgrade:FireServer(unpack(args))
    task.wait(3)
end
    else
        getgenv().ShardInv = false

while getgenv().ShardInv == true do

    local args = {
    [1] = "ShardInv",
    [2] = true
}

game:GetService("ReplicatedStorage").SuperUpgrade:FireServer(unpack(args))
    task.wait(3)
        end
    end
end)

--Keep Upgrades

UpgradesSection:NewToggle("Keep Upgrades", "Auto Upgrades Keep Upgrades", function(state)
    if state then
        getgenv().KeepUpgrades = true

while getgenv().KeepUpgrades == true do

    local args = {
    [1] = "KeepUpgrades",
    [2] = true
}

game:GetService("ReplicatedStorage").SuperUpgrade:FireServer(unpack(args))
    task.wait(3)
end
    else
        getgenv().KeepUpgrades = false

while getgenv().KeepUpgrades == true do

    local args = {
    [1] = "KeepUpgrades",
    [2] = true
}

game:GetService("ReplicatedStorage").SuperUpgrade:FireServer(unpack(args))
    task.wait(3)
        end
    end
end)

--Chests Section

local HatchsSection = Hatchs:NewSection("Chests")

--Common Chest

HatchsSection:NewToggle("Common Chest", "Auto Hatch Common Chest", function(state)
    if state then
        getgenv().CommonChest = true

while getgenv().CommonChest == true do

    local args = {
    [1] = "Common Chest"
}

game:GetService("ReplicatedStorage").BuyChest:FireServer(unpack(args))
    task.wait(0.0000000000000000001)
end
    else
        getgenv().CommonChest = false

while getgenv().CommonChest == true do

    local args = {
    [1] = "Common Chest"
}

game:GetService("ReplicatedStorage").BuyChest:FireServer(unpack(args))
    task.wait(0.0000000000000000001)
        end
    end
end)

--Uncommon Chest

HatchsSection:NewToggle("Uncommon Chest", "Auto Hatch Uncommon Chest", function(state)
    if state then
        getgenv().UncommonChest = true

while getgenv().UncommonChest == true do

    local args = {
    [1] = "Uncommon Chest"
}

game:GetService("ReplicatedStorage").BuyChest:FireServer(unpack(args))
    task.wait(0.0000000000000000001)
end
    else
        getgenv().UncommonChest = false

while getgenv().UncommonChest == true do

    local args = {
    [1] = "Uncommon Chest"
}

game:GetService("ReplicatedStorage").BuyChest:FireServer(unpack(args))
    task.wait(0.0000000000000000001)
        end
    end
end)

--Rare Chest

HatchsSection:NewToggle("Rare Chest", "Auto Hatch Rare Chest", function(state)
    if state then
        getgenv().RareChest = true

while getgenv().RareChest == true do

    local args = {
    [1] = "Rare Chest"
}

game:GetService("ReplicatedStorage").BuyChest:FireServer(unpack(args))
    task.wait(0.0000000000000000001)
end
    else
        getgenv().RareChest = false

while getgenv().RareChest == true do

    local args = {
    [1] = "Rare Chest"
}

game:GetService("ReplicatedStorage").BuyChest:FireServer(unpack(args))
    task.wait(0.0000000000000000001)
        end
    end
end)

--Epic Chest

HatchsSection:NewToggle("Epic Chest", "Auto Hatch Epic Chest", function(state)
    if state then
        getgenv().EpicChest = true

while getgenv().EpicChest == true do

    local args = {
    [1] = "Epic Chest"
}

game:GetService("ReplicatedStorage").BuyChest:FireServer(unpack(args))
    task.wait(0.0000000000000000001)
end
    else
        getgenv().EpicChest = false

while getgenv().EpicChest == true do

    local args = {
    [1] = "Epic Chest"
}

game:GetService("ReplicatedStorage").BuyChest:FireServer(unpack(args))
    task.wait(0.0000000000000000001)
        end
    end
end)

--Legendary Chest

HatchsSection:NewToggle("Legendary Chest", "Auto Hatch Legendary Chest", function(state)
    if state then
        getgenv().LegendaryChest = true

while getgenv().LegendaryChest == true do

    local args = {
    [1] = "Legendary Chest"
}

game:GetService("ReplicatedStorage").BuyChest:FireServer(unpack(args))
    task.wait(0.0000000000000000001)
end
    else
        getgenv().LegendaryChest = false

while getgenv().LegendaryChest == true do

    local args = {
    [1] = "Legendary Chest"
}

game:GetService("ReplicatedStorage").BuyChest:FireServer(unpack(args))
    task.wait(0.0000000000000000001)
        end
    end
end)

--Secret Chest

HatchsSection:NewToggle("Secret Chest", "Auto Hatch Secret Chest", function(state)
    if state then
        getgenv().SecretChest = true

while getgenv().SecretChest == true do

    local args = {
    [1] = "Secret Chest"
}

game:GetService("ReplicatedStorage").BuyChest:FireServer(unpack(args))
    task.wait(0.0000000000000000001)
end
    else
        getgenv().SecretChest = false

while getgenv().SecretChest == true do

    local args = {
    [1] = "Secret Chest"
}

game:GetService("ReplicatedStorage").BuyChest:FireServer(unpack(args))
    task.wait(0.0000000000000000001)
        end
    end
end)

--Wheel Section

local HatchsSection = Hatchs:NewSection("Wheels")

--Wheel

HatchsSection:NewToggle("Wheel", "Auto Hatch Wheel", function(state)
    if state then
        getgenv().Wheel = true

while getgenv().Wheel == true do

    game:GetService("ReplicatedStorage").Spin:FireServer()
    task.wait(0.0000000000000000001)
    game:GetService("ReplicatedStorage").SpinCallback:FireServer()
end
    else
        getgenv().Wheel = false

while getgenv().Wheel == true do

    game:GetService("ReplicatedStorage").Spin:FireServer()
    task.wait(0.0000000000000000001)
    game:GetService("ReplicatedStorage").SpinCallback:FireServer()
        end
    end
end)

--Demon Wheel

HatchsSection:NewToggle("Demon Wheel", "Auto Hatch Demon Wheel", function(state)
    if state then
        getgenv().DemonWheel = true

while getgenv().DemonWheel == true do

    game:GetService("ReplicatedStorage").DemonSpin:FireServer()
    task.wait(0.0000000000000000001)
end
    else
        getgenv().DemonWheel = false

while getgenv().DemonWheel == true do

    game:GetService("ReplicatedStorage").DemonSpin:FireServer()
    task.wait(0.0000000000000000001)
        end
    end
end)

--Unlimited Rebirth Section

local RebirthsSection = Rebirths:NewSection("Unlimited Rebirths")

--Auto Unlimited Rebirth

RebirthsSection:NewToggle("Unlimited Rebirth", "Auto Unlimited Rebirth", function(state)
    if state then
        getgenv().UnlimitedRebirth = true

while getgenv().UnlimitedRebirth == true do

    game:GetService("ReplicatedStorage").RebirthUnlimited:FireServer()
    task.wait(0.0000000000000000001)
end
    else
        getgenv().UnlimitedRebirth = false

while getgenv().UnlimitedRebirth == true do

    game:GetService("ReplicatedStorage").RebirthUnlimited:FireServer()
    task.wait(0.0000000000000000001)
        end
    end
end)
